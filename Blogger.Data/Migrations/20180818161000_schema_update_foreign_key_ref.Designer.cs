// <auto-generated />
using System;
using Blogger.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blogger.Data.Migrations
{
    [DbContext(typeof(BloggerContext))]
    [Migration("20180818161000_schema_update_foreign_key_ref")]
    partial class schema_update_foreign_key_ref
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blogger.Domain.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("name");

                    b.Property<DateTime>("updated_at");

                    b.Property<int>("user_id");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Blogger.Domain.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("full_name");

                    b.Property<int>("post_id");

                    b.Property<string>("text");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("id");

                    b.HasIndex("post_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Blogger.Domain.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("blog_id");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("text");

                    b.Property<string>("title");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("id");

                    b.HasIndex("blog_id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Blogger.Domain.PostTag", b =>
                {
                    b.Property<int>("post_id");

                    b.Property<int>("tag_id");

                    b.Property<int?>("Postid");

                    b.Property<int?>("Tagid");

                    b.Property<DateTime>("created_at");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("post_id", "tag_id");

                    b.HasIndex("Postid");

                    b.HasIndex("Tagid");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("Blogger.Domain.Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("name");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Blogger.Domain.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("name");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Blogger.Domain.Blog", b =>
                {
                    b.HasOne("Blogger.Domain.User", "user")
                        .WithOne("blog")
                        .HasForeignKey("Blogger.Domain.Blog", "user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blogger.Domain.Comment", b =>
                {
                    b.HasOne("Blogger.Domain.Post", "post")
                        .WithMany("comments")
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blogger.Domain.Post", b =>
                {
                    b.HasOne("Blogger.Domain.Blog", "blog")
                        .WithMany("posts")
                        .HasForeignKey("blog_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blogger.Domain.PostTag", b =>
                {
                    b.HasOne("Blogger.Domain.Post")
                        .WithMany("posttags")
                        .HasForeignKey("Postid");

                    b.HasOne("Blogger.Domain.Tag")
                        .WithMany("posttags")
                        .HasForeignKey("Tagid");
                });
#pragma warning restore 612, 618
        }
    }
}
